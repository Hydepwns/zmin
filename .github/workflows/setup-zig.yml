name: Setup Zig

on:
  workflow_call:
    inputs:
      install-valgrind:
        description: 'Install Valgrind for memory testing'
        required: false
        type: boolean
        default: false
      install-memory-tools:
        description: 'Install additional memory profiling tools'
        required: false
        type: boolean
        default: false
      build-mode:
        description: 'Build mode (default, --release=fast, etc)'
        required: false
        type: string
        default: ''

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      zig-version: ${{ steps.output-version.outputs.version }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          .github/versions.json

    - name: Read Zig version
      id: read-version
      run: |
        echo "version=$(jq -r '.zig' .github/versions.json)" >> $GITHUB_OUTPUT

    - name: Setup Zig
      uses: goto-bus-stop/setup-zig@v2
      with:
        version: ${{ steps.read-version.outputs.version }}

    - name: Install Valgrind
      if: ${{ inputs.install-valgrind }}
      run: |
        sudo apt-get update
        sudo apt-get install -y valgrind

    - name: Install memory profiling tools
      if: ${{ inputs.install-memory-tools }}
      run: |
        sudo apt-get update
        sudo apt-get install -y massif-visualizer valgrind time

    - name: Build project
      run: |
        if [ -n "${{ inputs.build-mode }}" ]; then
          zig build ${{ inputs.build-mode }}
        else
          zig build
        fi

    - name: Generate test datasets
      if: hashFiles('tools/scripts/benchmarks/generate_test_data.py') != ''
      run: |
        if [ ! -d tools/benchmarks/datasets ]; then
          mkdir -p tools/benchmarks/datasets
          python3 tools/scripts/benchmarks/generate_test_data.py
        fi

    - name: Output version
      id: output-version
      run: echo "version=${{ steps.read-version.outputs.version }}" >> $GITHUB_OUTPUT