{
  "name": "Zig",
  "scopeName": "source.zig",
  "fileTypes": ["zig"],
  "patterns": [
    { "include": "#comments" },
    { "include": "#strings" },
    { "include": "#keywords" },
    { "include": "#functions" },
    { "include": "#types" },
    { "include": "#numbers" },
    { "include": "#operators" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.zig",
          "match": "//.*$"
        },
        {
          "name": "comment.line.documentation.zig",
          "match": "///.*$"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.zig",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.zig",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.zig",
          "match": "'[^']*'"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.zig",
          "match": "\\b(if|else|switch|for|while|break|continue|return|try|catch|defer|errdefer)\\b"
        },
        {
          "name": "keyword.other.zig",
          "match": "\\b(fn|var|const|comptime|inline|pub|export|extern|packed|struct|enum|union|error|async|await|suspend|resume|cancel)\\b"
        },
        {
          "name": "storage.type.zig",
          "match": "\\b(void|bool|noreturn|type|anyerror|anytype)\\b"
        },
        {
          "name": "storage.type.integer.zig",
          "match": "\\b([iu]\\d+|[iu]size|comptime_int)\\b"
        },
        {
          "name": "storage.type.float.zig",
          "match": "\\b(f16|f32|f64|f128|comptime_float)\\b"
        },
        {
          "name": "constant.language.zig",
          "match": "\\b(null|undefined|true|false)\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "match": "\\b(fn)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
          "captures": {
            "1": { "name": "keyword.other.fn.zig" },
            "2": { "name": "entity.name.function.zig" }
          }
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "entity.name.type.zig",
          "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.zig",
          "match": "\\b(0x[0-9a-fA-F_]+|0o[0-7_]+|0b[01_]+|[0-9][0-9_]*(\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.zig",
          "match": "(\\+|\\-|\\*|\\/|%|\\=\\=|\\!\\=|\\<|\\>|\\<\\=|\\>\\=|\\&\\&|\\|\\||\\!|\\&|\\||\\^|\\<\\<|\\>\\>|\\~)"
        }
      ]
    }
  }
}